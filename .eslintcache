[{"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\index.js":"1","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\App.js":"2","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\reducers\\authReducer.js":"3","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\reducers\\userDataReducer.js":"4","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\NoMatch\\NoMatch.js":"5","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Auth\\SignUp.js":"6","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Home\\Home.js":"7","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Skeleton\\AppMenu.js":"8","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Auth\\SignIn.js":"9","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\utility.js":"10","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\actionTypes.js":"11","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\index.js":"12","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Skeleton\\SensorData.js":"13","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Home\\Data.js":"14","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\ContentContainer\\Description.js":"15","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Buttons\\Button.js":"16","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\CustomInput\\Input.js":"17","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Navbar\\Navbar.js":"18","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\HeroSection\\HeroSection.js":"19","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\ContentContainer\\Fields.js":"20","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Footer\\Footer.js":"21","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\assets\\Spinner\\Spinner.js":"22","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\ContentContainer\\Sensors.js":"23","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\authActions.js":"24","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\fieldAction.js":"25","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\sensorActions.js":"26","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\userdataActions.js":"27","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Auth\\Logout.js":"28"},{"size":813,"mtime":1623340414733,"results":"29","hashOfConfig":"30"},{"size":1034,"mtime":1623345308190,"results":"31","hashOfConfig":"30"},{"size":1262,"mtime":1623340424658,"results":"32","hashOfConfig":"30"},{"size":535,"mtime":1623335640543,"results":"33","hashOfConfig":"30"},{"size":261,"mtime":1623340414799,"results":"34","hashOfConfig":"30"},{"size":5066,"mtime":1623340424654,"results":"35","hashOfConfig":"30"},{"size":825,"mtime":1623335640455,"results":"36","hashOfConfig":"30"},{"size":10175,"mtime":1623344885805,"results":"37","hashOfConfig":"30"},{"size":4859,"mtime":1623340424653,"results":"38","hashOfConfig":"30"},{"size":142,"mtime":1623335640549,"results":"39","hashOfConfig":"30"},{"size":528,"mtime":1623340424655,"results":"40","hashOfConfig":"30"},{"size":217,"mtime":1623340424657,"results":"41","hashOfConfig":"30"},{"size":1099,"mtime":1623340424652,"results":"42","hashOfConfig":"30"},{"size":1672,"mtime":1623340414789,"results":"43","hashOfConfig":"30"},{"size":176,"mtime":1623340414515,"results":"44","hashOfConfig":"30"},{"size":923,"mtime":1623335640326,"results":"45","hashOfConfig":"30"},{"size":1842,"mtime":1623335640340,"results":"46","hashOfConfig":"30"},{"size":2408,"mtime":1623340424640,"results":"47","hashOfConfig":"30"},{"size":1579,"mtime":1623340424632,"results":"48","hashOfConfig":"30"},{"size":2225,"mtime":1623344879791,"results":"49","hashOfConfig":"30"},{"size":477,"mtime":1623335640356,"results":"50","hashOfConfig":"30"},{"size":178,"mtime":1623335640414,"results":"51","hashOfConfig":"30"},{"size":2990,"mtime":1623345215849,"results":"52","hashOfConfig":"30"},{"size":2373,"mtime":1623340424656,"results":"53","hashOfConfig":"30"},{"size":1342,"mtime":1623340424656,"results":"54","hashOfConfig":"30"},{"size":1338,"mtime":1623340424657,"results":"55","hashOfConfig":"30"},{"size":645,"mtime":1623335640529,"results":"56","hashOfConfig":"30"},{"size":496,"mtime":1623340424653,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"n52qrd",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\index.js",[],["122","123"],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\App.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\reducers\\authReducer.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\reducers\\userDataReducer.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\NoMatch\\NoMatch.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Auth\\SignUp.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Home\\Home.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Skeleton\\AppMenu.js",["124","125","126"],"import clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Redirect , useHistory, Link } from \"react-router-dom\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport LocalFloristIcon from \"@material-ui/icons/LocalFlorist\";\r\nimport MemoryIcon from \"@material-ui/icons/Memory\";\r\nimport * as actions from '../../redux/actions/index';\r\nimport { GiWheat } from \"react-icons/gi\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport style from \"./AppMenu.module.css\";\r\nimport Description from \"../ContentContainer/Description\";\r\n\r\nimport SensorData from \"../ContentContainer/Sensors\";\r\nimport FieldsCardlay from \"../ContentContainer/Fields\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport GreenButton from '../Buttons/Button';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      loading: state.auth.loading,\r\n      isAuthenticated: state.auth.idToken !== null,\r\n      token: state.auth.idToken\r\n\r\n  };\r\n};\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nconst Skeleton= props => {\r\n\r\n  const [visible, setVisible]= useState(\"Description\");\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openn = Boolean(anchorEl);\r\n\r\n  const doClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const doClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  \r\n\r\n\r\n  \r\n  \r\n \r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  \r\n  const [fdetails, setfdetails] = useState([]);\r\n\r\n  const [sdetails, setsdetails] = useState([]);\r\n    axios.defaults.headers = \r\n    {\r\n  'Content-Type': 'application/json',\r\n   Authorization: 'bearer ' + props.token\r\n    } \r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/api/user/fields/0')\r\n    .then((result) => {\r\n       setfdetails(result.data);\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err)\r\n    })\r\n  }, [fdetails]) \r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/api/fields/0/values')\r\n    .then((result) => {\r\n       setsdetails(result.data);\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err)\r\n    })\r\n  }, [sdetails]) \r\n\r\n\r\n  \r\n \r\n\r\n \r\n\r\n \r\n\r\n  return (\r\n      <div className={classes.root}>\r\n         \r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n          style={{ background: \"#526e3e\" }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={open ? handleDrawerClose : handleDrawerOpen}\r\n              edge=\"start\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <IconContext.Provider value={{ color: \"#fff\" }}>\r\n              <div className={ `${style.navbarContainer} ${style.container} `}>\r\n                <div className={style.navbarLogo} onClick={() => setVisible(\"Description\")} >\r\n                  <GiWheat  className={style.navbarIcon} />\r\n                  MLSMES\r\n                </div>\r\n                \r\n                  \r\n                  <div className={style.navMenu} >\r\n                     \r\n                    <GreenButton \r\n                          onClick={doClick}\r\n                          startIcon={<AccountCircleIcon />}\r\n                          \r\n                    > User </GreenButton>\r\n                   \r\n                   <Link to= \"/logout\">\r\n                   <GreenButton \r\n                          startIcon={<ExitToAppIcon />}\r\n                          > Logout </GreenButton>\r\n                   </Link>\r\n                    <Menu\r\n                        id=\"fade-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={openn}\r\n                        onClose={doClose}\r\n                        TransitionComponent={Fade}\r\n                        >\r\n                        <MenuItem onClick={doClose}>My account</MenuItem>\r\n                        <MenuItem onClick={doClose}>Settings</MenuItem>\r\n                      </Menu> \r\n                        {/*                     \r\n                        <GreenButton className={style.navItem}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.button}\r\n                          startIcon={<SettingsIcon />}\r\n                        >\r\n                          Settings\r\n                        </GreenButton> */}\r\n                  </div>\r\n              </div>\r\n            </IconContext.Provider>\r\n          </Toolbar>\r\n          <div></div>\r\n        </AppBar>\r\n  \r\n        {/* Side Menu  */}\r\n  \r\n        <Drawer\r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n            paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n            }),\r\n          }}\r\n          style={{ background: \"#5B7671\" }}\r\n        >\r\n          <div className={classes.toolbar}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              {theme.direction === \"rtl\" ? (\r\n                <ChevronRightIcon />\r\n              ) : (\r\n                <ChevronLeftIcon />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <div className={style.sidemenuContainer}>\r\n            <List >\r\n              <ListItem button key=\"Fields\" onClick={() => setVisible(\"Fields\")}>\r\n                <ListItemIcon>\r\n                  <LocalFloristIcon style={{color:\"#526e3e\"}}/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Fields\" />\r\n              </ListItem>\r\n              <ListItem button key=\"Sensors\" onClick={() => setVisible(\"Sensors\")}>\r\n                <ListItemIcon>\r\n                  <MemoryIcon style={{color:\"#526e3e\"}} />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Sensors\" />\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n       \r\n        \r\n        <main className={classes.content}>\r\n          <div className={classes.toolbar}/>\r\n              {visible === \"Description\" && <Description/>}\r\n          { visible === \"Fields\" &&\r\n           <Grid container spacing={3}>\r\n            {fdetails.map((item, key) => {\r\n              return (\r\n                <div key={key} className={style.fieldsCards}>\r\n                  <FieldsCardlay data={item} />\r\n                </div>\r\n              );\r\n            })\r\n            }\r\n          </Grid>\r\n          }\r\n           {visible === \"Sensors\" && \r\n            <Grid container spacing= {3}>{sdetails.map((item, key) => {\r\n              return (\r\n                <div key={key} className={style.fieldsCards}>\r\n                  <SensorData data={item} />\r\n                </div>\r\n              );\r\n            })\r\n            }\r\n        </Grid>\r\n          }\r\n        </main>\r\n      </div>\r\n    );  \r\n} \r\n\r\nexport default connect(mapStateToProps,null)(Skeleton);\r\n","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Auth\\SignIn.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\utility.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\actionTypes.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\index.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Skeleton\\SensorData.js",["127"],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Home\\Data.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\ContentContainer\\Description.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Buttons\\Button.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\CustomInput\\Input.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Navbar\\Navbar.js",["128"],"import React, { useState, useEffect} from \"react\";\r\nimport style from './Navbar.module.css';\r\nimport { GiWheat } from \"react-icons/gi\";\r\nimport { FaBars, FaTimes } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons/lib\";\r\nimport GreenButton from '../Buttons/Button'\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Navbar = ({element}) => {\r\n\r\n\r\n  const [click, setClick] = useState(false);\r\n  const [buttons, setButton] = useState(true);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n  \r\n  const showButton = () => {\r\n    if (window.innerWidth <= 960) {\r\n      setButton(false);\r\n    } else {\r\n      setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n    window.addEventListener(\"resize\", showButton);\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <IconContext.Provider value={{ color: \"#fff\" }}>\r\n        <nav className={style.navbar}>\r\n          <div className={`${style.navbarContainer} ${style.container}`}>\r\n            <Link to=\"/\" className={style.navbarLogo} onClick={closeMobileMenu}>\r\n              <GiWheat className={style.navbarIcon} />\r\n              MLSMES\r\n            </Link>\r\n            <div className={style.menuIcon} onClick={handleClick}>\r\n              {click ? <FaTimes /> : <FaBars />}\r\n            </div>\r\n            <ul className= {click ?  style.navMenuActive  : style.navMenu } >\r\n              <li className={style.navItem}>\r\n                <a href=\"/#home\" className={style.navLinks} onClick={closeMobileMenu}>\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className={style.navItem}>\r\n                <a href=\"/#Vision\" className={style.navLinks}>\r\n                  Vision\r\n                </a>\r\n              </li>\r\n              <li className={style.navItem}>\r\n                <a href=\"/#About\" className={style.navLinks}>\r\n                  About\r\n                </a>\r\n              </li>\r\n\r\n             <li className={element=== 'login' ? `${style.navBtn} ${style.login}`: style.navBtn } >\r\n                \r\n              <Link to= \"/login\" ><GreenButton color=\"inherit\">Login</GreenButton>\r\n              </Link>\r\n              \r\n              </li>\r\n            </ul>  \r\n            \r\n            \r\n            \r\n          </div>\r\n        </nav>\r\n      </IconContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Navbar;\r\n","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\HeroSection\\HeroSection.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\ContentContainer\\Fields.js",["129","130","131"],"\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport FieldImage from \"../../static/images/farm.jpg\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    padding: \"20px 20px\",\r\n    background: \"#d0f0c0\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#526e3e\",\r\n  },\r\n  typo: {\r\n    padding: \"0px 2px\",\r\n  },\r\n}));\r\n\r\n\r\nconst FieldsCardlay =({data}) => {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n   \r\n    <React.Fragment>\r\n          <Card className={classes.root}>\r\n      <CardHeader \r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            F\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={data.name}\r\n        //subheader={data.epoch}\r\n      />\r\n      <CardMedia className={classes.media} image={FieldImage} title=\"Fields\" />\r\n      <CardContent>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"#526e3e\"\r\n          \r\n          className={classes.typo}\r\n        >\r\n          \r\n        <ul>\r\n      <li> Field ID : {data.fid}</li>\r\n       <li> Geolocation : {data.Location}</li>\r\n      \r\n      </ul>\r\n         \r\n         \r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n    </React.Fragment>\r\n    \r\n  \r\n    \r\n\r\n  );\r\n};\r\nexport default FieldsCardlay;\r\n","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\Footer\\Footer.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\assets\\Spinner\\Spinner.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\components\\ContentContainer\\Sensors.js",["132","133"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {connect} from 'react-redux';\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SensorImage from \"../../static/images/sensor.jpg\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    padding: \"20px 20px\",\r\n    background: \"#d0f0c0\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#526e3e\",\r\n  },\r\n  typo: {\r\n    padding: \"0px 2px\",\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst SensorCardlay = ({ data }) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            S\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Test Sensor 0\"\r\n        subheader={data.epoch}\r\n      />\r\n      <CardMedia className={classes.media} image={SensorImage} title=\"Sensor\" />\r\n      <CardContent>\r\n        <Typography\r\n          variant=\"body2\"\r\n          color=\"#526e3e\"\r\n          component=\"ul\"\r\n          className={classes.typo}\r\n        >\r\n          <li> Level 0 : {data.mlevel0}</li>\r\n          <li> Level 1 : {data.mlevel1}</li>\r\n          <li> Level 2 : {data.mlevel2}</li>\r\n          <li> Level 3 : {data.mlevel3}</li>\r\n        </Typography>\r\n      </CardContent>\r\n      {/* <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent></CardContent>\r\n      </Collapse> */}\r\n    </Card>\r\n  );\r\n};\r\nexport default SensorCardlay;\r\n","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\authActions.js",[],["134","135"],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\fieldAction.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\sensorActions.js",[],"D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\redux\\actions\\userdataActions.js",["136","137"],"import * as actionTypes from './actionTypes';\r\nimport * as actions from '../../redux/actions/index';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\n\r\nexport const userdata = (token) => {\r\n  \r\n    axios.defaults.headers = {\r\n        'Content-Type': 'application/json',\r\n        Authorization: 'bearer ' + token\r\n    }\r\n\r\n    return dispatch => {\r\n        \r\n\r\n        \r\n        let url = 'http://localhost:3001/api/users'\r\n        axios.get(url)\r\n        .then(response => {\r\n            console.log(response);\r\n            \r\n            \r\n        })\r\n        .catch(err => \r\n            {\r\n                 console.log(err);\r\n            \r\n        })};\r\n};","D:\\DATA\\MLSES-FYP\\MLSES-FYP-Front\\src\\pages\\Auth\\Logout.js",["138"],"import React, { useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../redux/actions/index';\r\n\r\nconst Logout = props => {\r\n  useEffect(() => {\r\n    props.onLogout();\r\n  }, []);\r\n\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogout: () => dispatch(actions.logout())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Logout);\r\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":18},{"ruleId":"143","severity":1,"message":"147","line":3,"column":21,"nodeType":"145","messageId":"146","endLine":3,"endColumn":31},{"ruleId":"143","severity":1,"message":"148","line":17,"column":13,"nodeType":"145","messageId":"146","endLine":17,"endColumn":20},{"ruleId":"149","severity":1,"message":"150","line":27,"column":8,"nodeType":"151","endLine":27,"endColumn":10,"suggestions":"152"},{"ruleId":"143","severity":1,"message":"153","line":16,"column":10,"nodeType":"145","messageId":"146","endLine":16,"endColumn":17},{"ruleId":"143","severity":1,"message":"154","line":12,"column":17,"nodeType":"145","messageId":"146","endLine":12,"endColumn":26},{"ruleId":"143","severity":1,"message":"155","line":12,"column":28,"nodeType":"145","messageId":"146","endLine":12,"endColumn":36},{"ruleId":"143","severity":1,"message":"156","line":13,"column":8,"nodeType":"145","messageId":"146","endLine":13,"endColumn":13},{"ruleId":"143","severity":1,"message":"157","line":10,"column":9,"nodeType":"145","messageId":"146","endLine":10,"endColumn":16},{"ruleId":"143","severity":1,"message":"158","line":47,"column":9,"nodeType":"145","messageId":"146","endLine":47,"endColumn":26},{"ruleId":"139","replacedBy":"159"},{"ruleId":"141","replacedBy":"160"},{"ruleId":"143","severity":1,"message":"161","line":1,"column":13,"nodeType":"145","messageId":"146","endLine":1,"endColumn":24},{"ruleId":"143","severity":1,"message":"148","line":2,"column":13,"nodeType":"145","messageId":"146","endLine":2,"endColumn":20},{"ruleId":"149","severity":1,"message":"150","line":10,"column":6,"nodeType":"151","endLine":10,"endColumn":8,"suggestions":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'actions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["165"],"'buttons' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'connect' is defined but never used.","'handleExpandClick' is assigned a value but never used.",["163"],["164"],"'actionTypes' is defined but never used.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},"Update the dependencies array to be: [props]",{"range":"170","text":"171"},{"range":"172","text":"171"},[715,717],"[props]",[264,266]]